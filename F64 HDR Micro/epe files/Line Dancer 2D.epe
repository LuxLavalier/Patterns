{
  "name": "Line Dancer 2D",
  "id": "feS9Y8fARtdiCe4qH",
  "sources": {
    "main": "// Twisting line effect - basic idea from a PC screensaver I saw\n// long, long ago.  No idea where.\n// Re-imagined to be uniquely Pixelblaze-y\n//\n// Now with twist control and kaleidoscopic mirroring\n// 10/26/2021 - ZRanger1\n\nvar timebase = 0;\nvar t1;\nvar zoom;\nexport var speed = 4.6;\nexport var twist = 1.75;\nexport var nSides = 1;\nvar slice = PI / nSides;\n\ntranslate(-0.5,-0.5);\n\nexport function sliderSpeed(v) {\n  speed = 1+(9*v);\n}\n\nexport function sliderTwist(v) {\n  twist = 1.25+(0.75*v);\n}\n\nexport function sliderReflections(v) {\n  nSides = 1+floor(6*v);\n  slice = PI / nSides;\n}\n\n// sets up a kaleidoscope effect - makes the image repeat over evenly divided\n// rotated \"slices\" about the center.\nvar outx,outy;\n\nfunction kal(x,y,t1) {\n  var angle = atan2(y, x);\n  angle = mod(angle, 2.0 * slice);\n  \n  // uncomment to reflect each slice so they can be tiled\n  // evenly if you like.\n  //angle = abs (angle - slice);\n  \n  // rotate image over time\n  angle += PI*timebase;\n  \n  // map new rotated coordinates back to original image space\n  var d = hypot(x,y);\n  outx = d * cos(angle);  outy = d * sin(angle);\n}\n\nexport function beforeRender(delta) {\n  timebase = (timebase + delta/1000) % 1000;\n  t1 = timebase * speed;\n  zoom = wave(time(0.075));\n}\n\nexport function render2D(index,x,y) {\n  var h,b,radius,theta;  \n  \n  if (nSides > 1) { kal(x,y,t1); x = outx; y = outy; }\n  \n  radius = twist-hypot(x,y)*2.4;\n  theta = radius * radius * sin(radius + t1);\n  x = (cos(theta) * x) - (sin(theta)* y);\n\n  b = 1-wave(x*4.6*zoom);\n  h = (x * zoom)+ zoom + theta/PI2;\n  hsv(h,1,b*b);\n}"
  },
  "preview": "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"
}