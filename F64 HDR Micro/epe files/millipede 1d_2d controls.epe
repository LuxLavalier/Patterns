{
  "name": "millipede 1d/2d controls",
  "id": "YLCnBNY7gFxK4ox6S",
  "sources": {
    "main": "/*\n  Millipede\n\n  There's something mesmerizing about the waves that travel along a millipede's\n  feet. This pattern's combination of wave()s and a remainder seems to capture\n  a similar motion.\n\n  Regarding the order of operations, remainder has the same precedence as\n  multiplication and division, so `a * b / c % d * e` happens left-to-right.\n*/\n\nspeed = 20\nlegs = 10\nexport var tiers = 1\n\nexport var cx = .5\nexport var cy = .5\n\nexport function sliderLegs(v) {\n  legs = 1 + floor(v*20)\n}\n\nexport function sliderSpeed(v) {\n  speed = 1 + floor(v*65)\n}\n\nexport function sliderPositionX(v) {\n  cx = v\n}\n\nexport function sliderPositionY(v) {\n  cy = v\n}\n\nexport function sliderTiers(v) {\n  tiers = 1 + floor(v * 4.99)\n}\n\n\nexport function beforeRender(delta) {\n  t1 = time(1 / speed)\n  t2 = time(2 / speed)\n}\n\nexport function render(index) {\n  h = index / pixelCount \n  h += (index / pixelCount + t2) * legs / 2 % .5\n  v = wave(h + t2)\n  v = v * v // Gamma correction\n  hsv(h, 1, v)\n}\n\nexport function render2D(index, x, y) {\n  x -= cx\n  y-= cy\n  \n  r = sqrt(x*x + y*y)\n  \n  t = floor(r * tiers) / tiers\n  \n  //use angle around a center point instead of distance on a strip\n  h = ((atan2(x, y ) + 1)/PI2 + 1) * .5 \n  h += (h + t2) * legs / 2 % .5\n  v = wave(h + t2 + t)\n  v = v * v // Gamma correction\n  hsv(h, 1, v)\n}\n"
  },
  "preview": "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"
}