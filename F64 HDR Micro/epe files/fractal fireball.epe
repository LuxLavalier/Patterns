{
  "name": "fractal fireball",
  "id": "TLmWmyJ5TtMkrkaup",
  "sources": {
    "main": "\n\nvar width = 32\nvar height = 16\nvar iterations = 7\nvar scale = .02\nvar speed = .5\nvar fade = .9\n\nvar pixelFade\n\nvar skip = 4\n\n\nvar pixels = array(width * height)\nvar hues = array(width * height)\n\nexport var iter\n\nvar w1, t1, w2\n\n\nexport var bx, by\n\nfunction getIndex(x, y) {\n  \n  var res = floor(x*width) + floor(y*height)*width\n  if (x < 0 || x > 1 || y < 0 || y  > 1 || res < 0 || res > 255) {\n    bx = x; by = y\n  }\n  return res\n}\n\nfunction f(x, y, a, i) {\n  iter++\n  var s = sin(a), c = cos(a), index\n  \n  x += s * i * scale;\n  y += c * i * scale;\n  \n  x = mod(x,.99999)\n  y =  mod(y,.99999)\n  \n  if (i <= skip) {\n    index = getIndex(x,y)\n    pixels[index]++\n    hues[index] = i * .3 + .1 \n  }\n  \n  i--\n  if (i > 0) {\n    f(x, y, a + w2, i)\n    f(x, y, a - w1, i)\n  }\n}\n\n\nexport function beforeRender(delta) {\n  t1 = time(.1 / speed)\n  w1 = sin(t1*PI2) * PI2\n  w2 = sin(time(.13 / speed)*PI2) * PI2\n  w3 = sin(time(.5 / speed) * PI2) * PI2\n  iter = 0\n  \n  pixelFade = delta * fade\n  pixels.mutate(p => p*fade)\n  f(.5,.5, w3, iterations)\n}\n\nexport function render2D(index, x, y) {\n  index = getIndex(x, y)\n  h = hues[index] * .07\n  \n  v = clamp(pixels[index] /10, 0, 1)\n  v = v*v\n  \n  hsv(h, 1, v)\n}"
  },
  "preview": "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"
}